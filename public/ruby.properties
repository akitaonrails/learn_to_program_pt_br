# Define SciTE settings for Ruby files.

file.patterns.rb=*.rb;*.rbw;*.rbx

filter.ruby=Ruby (rb rbw rbx)|$(file.patterns.rb)|

lexer.$(file.patterns.rb)=ruby

keywordclass.ruby=__FILE__ and def end in or self unless __LINE__ begin \
defined? ensure module redo super until BEGIN break do false next rescue \
then when END case else for nil retry true while alias class elsif if \
not return undef yield
keywords.$(file.patterns.rb)=$(keywordclass.ruby)

statement.indent.*.rb=
statement.end*.rb=
statement.lookback.*.rb=1
block.start.*.rb=10

comment.block.ruby=#~

# ruby styles
# White space
style.ruby.0=fore:#0000FF
# Comment
style.ruby.1=fore:#FFFFFF,$(font.comment)
# Number
style.ruby.2=fore:#007F00
# String
style.ruby.3=fore:#C00000,$(font.monospace)
# Single quoted string
style.ruby.4=fore:#C00000,$(font.monospace)
# Keyword
style.ruby.5=fore:#0000FF
# Triple quotes
style.ruby.6=fore:#FFFFFF
# Triple double quotes
style.ruby.7=fore:#FFFFFF
# Class name definition
style.ruby.8=fore:#7F007F
# Function or method name definition
style.ruby.9=fore:#7F007F
# Operators
#style.ruby.10=bold
# Identifiers
style.ruby.11=fore:#000000
# Comment-blocks
style.ruby.12=fore:#FFFFFF
# End of line where string is not closed
style.ruby.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Matched Operators
#style.ruby.34=fore:bold
#style.ruby.35=fore:#FF0000
# Braces are only matched in operator style
braces.ruby.style=10

if PLAT_WIN
	command.go.*.rb=ruby $(FileNameExt)
	command.go.subsystem.*.rb=1
	
if PLAT_GTK
	command.go.*.rb=ruby $(FileNameExt)
